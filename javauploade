  imageView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
                intent.setType("image/*");
                startActivityForResult(Intent.createChooser(intent,"Select picture"),1);



            }
        });
        @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1 && resultCode==RESULT_OK && data!=null && data.getData()!=null)
        {

            Uri filepath=data.getData();
            try {

                bitmap= MediaStore.Images.Media.getBitmap(getContentResolver(),filepath);



            }catch (IOException e)
            {

                e.printStackTrace();
            }
            SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
            String id=sp.getString("id","");
            uploadImage(id,getmImageUrl(bitmap));

        }
    }
     private void uploadImage(final String id,final String image) {

        progressBar.setVisibility(View.VISIBLE);

        StringRequest stringRequest=new StringRequest(Request.Method.POST, URL, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {

                retrive();
                progressBar.setVisibility(View.INVISIBLE);
                try {

                    JSONObject jsonObject = new JSONObject(response);

                    String success = jsonObject.getString("success");

                    if (success.equals("1"))
                    {
                        Toast.makeText(Update.this,"Image uploaded successfully",Toast.LENGTH_SHORT).show();

                    }

                }catch (JSONException e)
                {
                    progressBar.setVisibility(View.INVISIBLE);
                    e.printStackTrace();
                    Toast.makeText(Update.this,"Please check your network and try again",Toast.LENGTH_SHORT).show();
                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(Update.this,"please try again later",Toast.LENGTH_SHORT).show();
                progressBar.setVisibility(View.INVISIBLE);
            }
        }){
            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String,String > parms=new HashMap<>();
                parms.put("id",id);
                parms.put("image",image);

                return parms;
            }

        };

        RequestQueue requestQueue= Volley.newRequestQueue(this);
        requestQueue.add(stringRequest);
    }
    public String getmImageUrl(Bitmap bitmap){

        ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.JPEG,100,byteArrayOutputStream);
        byte[] image=byteArrayOutputStream.toByteArray();
        String encodetype=Base64.encodeToString(image,Base64.DEFAULT);

        return encodetype;
    }



    public void retrive() {

        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        String id=sp.getString("id","");
        Call<Users> call=Retrofitclient.getInstance().getapi().retriveimage(id);

        progressBar.setVisibility(View.VISIBLE);
        call.enqueue(new Callback<Users>() {
            @Override
            public void onResponse(Call<Users> call, retrofit2.Response<Users> response) {



                if (response.isSuccessful())
                {

                    try {
                    String image=response.body().getImgurl();

                    Toast.makeText(Update.this,"sucess",Toast.LENGTH_SHORT).show();

                    progressBar.setVisibility(View.INVISIBLE);


                       Picasso.get().load(image).memoryPolicy(MemoryPolicy.NO_CACHE).placeholder(R.drawable.ic_image_black_24dp).networkPolicy(NetworkPolicy.NO_CACHE)
                               .into(imageView);

                   }catch (Exception e)
                   {
                       Toast.makeText(Update.this,"No image found upload profile image",Toast.LENGTH_SHORT).show();
                       progressBar.setVisibility(View.INVISIBLE);
                   }



                }
                else
                {
                    Toast.makeText(Update.this,"failed",Toast.LENGTH_SHORT).show();
                    progressBar.setVisibility(View.INVISIBLE);
                }
            }

            @Override
            public void onFailure(Call<Users> call, Throwable t) {
                Toast.makeText(Update.this,"Something went wrong please check your network",Toast.LENGTH_SHORT).show();
            }
        });
